[{"id":"48497fa5.7b69d","type":"tab","label":"Power Menu - WOL","disabled":false,"info":"\n![enter image description here](https://notenoughtech.com/wp-content/uploads/2021/05/print1.jpg)\nTaking Power Tiles from Android11 offline so you can add any devices from your DIY Smart Home. No cloud requirement to achieve a 3 way sync between phones and NodeRED dashboard. You learn about [Power Menu](https://notenoughtech.com/tasker/power-menu-for-your-diy-smart-home/)\n\nThis tutorial covers wake on LAN tile with all the integrations you will ever need.\n\n[Complete instructions](https://notenoughtech.com/tasker/power-menu-for-your-diy-smart-home/)\n\n\n\n**Features**:\n-   Display synched Power Menu across multiple devices\n-   Dashboard logic for web access\n-   Alexa and Google Home integration\n-   Deploy and forget\n-   Modular, pick functions you need\n-   Monitors the status of the target machine\n\n## Requirements\n\n - Tasker\n - node-red-contrib-joinapp (Power Menu communication)\n - node-red-node-wol\n - This Tasker Project File\n - This EventGhost config (for remote sleep)\n \n optional:\n - node-red-contrib-smartnora (Google Home integration)\n - node-red-contrib-alexa-home-skill (Alexa integration)\n - node-red-dashboard (web dashboard elements)\n\nIf you are interested in WOL, you can also check out the Power Dashboard I made for computers to monitor the power used and cost associated with it. \n[Complete instructions](https://notenoughtech.com/home-automation/pc-dashboard-using-netio-power-cables/)\n\n# Settings\n\nCheck the settings Function node - On Start tab and fill in the target details and Join Device names for each phone you want to present the Power Menu on. Tap the Power Menu once to send initial config.\n \n ## More about me:\n\nIf you want to get the latest updates to this project you can follow me via your preferred social media:\n\n-   [Facebook](https://www.facebook.com/NotEnoughTECH/)\n-   [Twitter](https://twitter.com/NotEnoughTECH)\n-   [Instagram](https://www.instagram.com/notenoughtech/)\n-   [YouTube](https://www.youtube.com/user/Polepositionpage)\n\nAnd if you feeling like buying me a coffee or supporting me in a more continuous way:\n\n-   [Paypal](https://www.paypal.me/notenoughtech)\n-   [Patreon](https://www.patreon.com/NotEnoughTECH)\n\nI hope you have enjoyed the project!\n"},{"id":"2748f3ea.5d34bc","type":"group","z":"48497fa5.7b69d","name":"Logic","style":{"stroke":"#ff0000","fill":"#ffbfbf","label":true,"label-position":"n","color":"#000000"},"nodes":["59ef2313.4fd9fc","5cc07e2f.a3521","8008d0bc.12f22","d4bed9b6.227458","303c9900.6d2bc8","9d16f122.bcc8a","510ca2d7.76a10c","92c078e5.3a7da8"],"x":454,"y":419,"w":882,"h":162},{"id":"32922e65.53a7c2","type":"group","z":"48497fa5.7b69d","name":"Smart Speakers","style":{"stroke":"#ffC000","fill":"#ffefbf","label":true,"label-position":"n"},"nodes":["134f1e46.cc9752","c4ccbf98.36334","75dbe06c.2bedc","ad0e5fae.0572a"],"x":454,"y":99,"w":882,"h":142},{"id":"7e0357c2.b386f8","type":"group","z":"48497fa5.7b69d","name":"Dashboard GUI","style":{"label":true,"stroke":"#0070c0","fill":"#7fb7df","label-position":"n","color":"#000000"},"nodes":["fc0c1554.7b66b8","21f3c4c3.f8a20c","9dbd9977.e4e958","be9ba2be.22e42","3523f564.f0688a","7f6b0e6e.13fd9","3255e081.91ac1"],"x":454,"y":259,"w":882,"h":142},{"id":"e41a634a.4bf0e","type":"group","z":"48497fa5.7b69d","name":"Power Menu","style":{"stroke":"#6f2fa0","fill":"#b797cf","label":true,"label-position":"n","color":"#000000"},"nodes":["3d1589e6.83e9d6","2ee13f93.83111","a7c6154a.c648d8","fc15b306.4d398","aa175544.8c87c8","e931a643.bb8278"],"x":454,"y":591.5,"w":882,"h":97},{"id":"6428652c.9a707c","type":"join-receive-message","z":"48497fa5.7b69d","name":"","command":"PT","variables":"extra,taskerCommand,tileID,config,tileStatus","parseNumbers":true,"server":"bb9737a3.bbb4d8","x":130,"y":140,"wires":[["3be8c3bb.da354c"]]},{"id":"a56b6e3e.409b","type":"join-message","z":"48497fa5.7b69d","name":"","text":"","title":"","url":"","notificationicon":"","joinConfig":"1c0401ee.9b9bfe","x":1500,"y":140,"wires":[[]]},{"id":"3be8c3bb.da354c","type":"switch","z":"48497fa5.7b69d","name":"TileID","property":"payload.tileID","propertyType":"msg","rules":[{"t":"eq","v":"wol","vt":"str"}],"checkall":"true","repair":false,"outputs":1,"x":270,"y":140,"wires":[["a681dcee.0a424"]]},{"id":"3d1589e6.83e9d6","type":"function","z":"48497fa5.7b69d","g":"e41a634a.4bf0e","name":"Tile Type - Read description inside","func":"//This function node has 3 outputs tile types output to relevant outputs\n// 1. button (usually carries extra info associated with %extra variable in Tasker)\n// 2. toggle (true/false)\n// 3. slider (number)\n// connect appropriate outputs to receive values from tiles\n\nfunction reverse(x){\n    if(x === \"true\"){return false;}\n    if(x === \"false\"){return true;}\n}\n\nfunction boolformat(y){\n    if(y === \"true\"){return true;}\n    if(y === \"false\"){return false;}\n}\n\nfunction define(z){\n    if(z === undefined){return \" \";}\n    else{return z;}\n}\n\nvar config = JSON.parse(msg.payload.config);  \nvar sourceID = msg.push.senderId;\nvar toggleReversed, toggle, rangeCurrent, tileAction \n\n\n//common tile fields - all tile share these\nvar tileType = config.tileType;\nvar tileID = msg.payload.tileID;\nvar title = config.title;\nvar subtitle = config.subtitle;\nvar icon = config.icon;\n\n//extra fields\n//toggle = msg.payload.tileStatus;\nvar taskerCommand = msg.payload.taskerCommand;\n\n\n//extra info injected by other Tasker actions in front\nvar extra = msg.payload.extra;\n\n//range config\nvar rangeMin =     define(config.range.min);\nvar rangeMax =     define(config.range.max);\nvar rangeStep =    define(config.range.step);\nvar rangeFormat =  define(config.range.format);\n\n\n//process Toggle changes\nif(tileType === \"toggle\"){\n    toggle =  boolformat(msg.payload.tileStatus);}\n\n//process range changes\nif(tileType === \"range\"){\n    rangeCurrent =  msg.payload.tileStatus;\n    toggle = true;\n}\n//process range toggle\nif(tileType === \"rangeToggle\"){\n    toggle =       msg.payload.tileStatus[0];\n    rangeCurrent = msg.payload.tileStatus[1];  //toggling rangeToggle defaults to current Range Value in Tasker\n    tileAction =   msg.payload.tileStatus[2];\n    \n    \n    //if toggle is pressed\n    if (tileAction === \"toggle\"){\n        rangeCurrent = msg.payload.tileStatus[1];\n        if(toggle === \"false\"){\n            toggle = boolformat(toggle);\n        }\n        if(toggle === \"true\" ){\n          toggle = boolformat(toggle);\n       }\n        if(toggle === \"true\" && rangeCurrent == rangeMin){\n            rangeCurrent = rangeMin + 1;\n            toggle = boolformat(toggle);\n        }\n    }\n    //if range  is changed\n    if(tileAction === \"range\"){\n        if(rangeCurrent >= rangeMin){toggle = boolformat(toggle);}\n    }\n}\n\n\n// save the tile state as ID based flow variable\n// command needs \"=:=\" replaced with \":::\"\nvar command = taskerCommand +\":::\"+ tileType +\":::\"+ JSON.stringify(config);\n\nvar data = {\"extra\":extra,\n            \"sourceID\": sourceID,\n            \"taskerCommand\": taskerCommand,\n            \"tileType\": tileType,\n            \"tileConfig\": config,\n            \"tileID\": tileID,\n            \"toggleState\": toggle,\n            \"rangeState\": define(rangeCurrent),\n            \"command\" : command\n        };\n        \nflow.set(tileID, data);\n\n\n\n//split outcomes based on the tile type\n\n switch(tileType){\n    case \"button\":\n        msg.data = {\"title\": title, \"subtitle\": subtitle};\n        msg.extra = extra;\n        msg.tileID = tileID;\n        msg.inbound = true;\n        \n        return [msg, null, null];\n        \n    \n    case \"toggle\":\n        msg.payload = toggle;\n        msg.extra = extra;\n        msg.data = {\"title\": title, \"subtitle\": subtitle};\n        msg.tileID = tileID;\n        msg.inbound = true;\n        \n        return [null, msg, null];\n        \n        \n    case \"range\":\n        msg.payload = rangeCurrent;\n        msg.extra = extra;\n        msg.data = {\"title\": title, \"subtitle\": subtitle};\n        msg.tileID = tileID;\n        msg.inbound = true;\n        \n        return [null, null, msg];\n        \n        \n    case \"rangeToggle\":\n        if (tileAction === \"toggle\"){\n            msg.payload = toggle;\n            msg.label = tileID;\n            msg.inbound = true;\n            msg.tileID = tileID;\n            \n            return [null, msg, null];\n        }\n        if (tileAction === \"range\"){\n            msg.payload = rangeCurrent;\n            msg.label = tileID;\n            msg.inbound = true;\n            msg.tileID = tileID;\n            \n            return [null, null, msg];\n        }\n }","outputs":3,"noerr":0,"initialize":"","finalize":"","libs":[],"x":680,"y":640,"wires":[["e931a643.bb8278"],[],[]]},{"id":"2ee13f93.83111","type":"function","z":"48497fa5.7b69d","g":"e41a634a.4bf0e","name":"Prep response","func":"//please add sourceIDs from Join in the ON Start tab\n\nvar tile, comm, title, tileID, subtitle, icon, command, sourceID, toggle, config, rangeMin, rangeMax, rangeCurrent, rangeStep, rangeFormat, extra\n\nfunction isNumeric(value) {\n        return /^-?\\d+$/.test(value);\n    }\n    \n\n\n//Tasker -> NodeRED -> Tasker\nif(msg.inbound === true){\n    let data = flow.get(\"WOL\");\n    tile = flow.get(msg.tileID);\n    \n    sourceID = data.sourceID;\n    var lastTileData = {\"tileID\" : msg.tileID, \"sourceID\": sourceID};\n    context.set(\"lastTileID\", lastTileData);\n    \n\n    \n    //if you want to change the properties of the tile in the response, edit these, otherwise \n    //they will take values from the source tile\n    \n    title =         tile.tileConfig.title;\n    tileID =        msg.tileID \n    tileType =      tile.tileConfig.tileType;\n    subtitle =      tile.tileConfig.subtitle;\n    rangeCurrent =  tile.rangeState;\n    toggleState  =  tile.toggleState;\n    \n    icon =          tile.tileConfig.icon.off;\n    if(toggleState === true){icon = tile.tileConfig.icon.on;}\n    if(toggleState === false){icon = tile.tileConfig.icon.off;}\n    command =       tile.command;\n    rangeMin =      tile.tileConfig.range.min;\n    rangeMax =      tile.tileConfig.range.max;\n    rangeStep =     tile.tileConfig.range.step;\n    rangeFormat =   tile.tileConfig.range.format;\n    config =        tile.tileConfig;\n    \n}\n\n\n\n\n\n\n//local response NodeRED -> Tasker\nelse{\n    var lastTile = flow.get(\"WOL\");\n    tile = flow.get(lastTile.tileID);\n    sourceID = lastTile.sourceID;\n    \n    //if you want to change the properties of the tile in the response, edit these, otherwise \n    //they will take values from the source tile\n    \n    title =         tile.tileConfig.title; \n    tileType =      tile.tileType;\n    tileID  =       tile.tileID;\n    subtitle =      tile.tileConfig.subtitle;  \n    icon =          tile.tileConfig.icon;\n    taskerCommand = tile.taskerCommand;\n    extra =         tile.extra;\n    rangeMin =      tile.tileConfig.range.min;\n    rangeMax =      tile.tileConfig.range.max;\n    rangeStep =     tile.tileConfig.range.step;\n    rangeFormat =   tile.tileConfig.range.format;\n    config =        tile.tileConfig;\n    \n    //checks for inputs from various dashboard elements\n  \n    if(tileType === \"button\"){\n        toggleState =   msg.payload;\n        rangeCurrent =  tile.rangeState;\n        \n        if(toggleState === true){\n            icon = tile.tileConfig.icon.on;\n            subtitle = \"online\";\n        }\n        if(toggleState === false){\n            icon = tile.tileConfig.icon.off;\n            subtitle = \"offline\";\n        }\n    }\n    \n    if(tileType === \"toggle\"){\n        toggleState =   msg.payload;\n        rangeCurrent =  tile.rangeState;\n        \n            // toggling icons on tile\n        if(toggleState=== true){\n            icon =          tile.tileConfig.icon.on;\n        } \n        if(toggleState=== false){\n            icon =          tile.tileConfig.icon.off;\n        }\n    }\n    \n    \n    \n    if(tileType === \"range\"){\n        toggleState =   tile.toggleState;\n        rangeCurrent =  msg.payload;\n    }\n    \n    \n    \n    if(tileType === \"rangeToggle\"){\n        if(msg.payload === true){\n            toggleState = msg.payload;\n            rangeCurrent =   tile.rangeState;\n            icon = tile.tileConfig.icon.on;\n        } \n        if(msg.payload === false){\n            toggleState = msg.payload;\n            rangeCurrent =   tile.rangeState;\n            icon = tile.tileConfig.icon.off;\n        }\n        if(isNumeric(msg.payload)){\n            node.warn(\"triggered nums \" + msg.payload);\n            rangeCurrent =  msg.payload;\n            toggleState =   true;\n            icon = tile.tileConfig.icon.on;\n        }\n    }\n    \n    //save changes made via nodeRED and update the context\n    command = taskerCommand +\":::\"+ tileID +\":::\"+ JSON.stringify(config);\n    \n    var data = {\"extra\": extra,\n                \"sourceID\": sourceID,\n                \"taskerCommand\": taskerCommand,\n                \"tileType\": tileType,\n                \"tileID\": tileID,\n                \"tileConfig\": config,\n                \"toggleState\": toggleState,\n                \"rangeState\": rangeCurrent,\n                \"command\" : command\n            };\n    flow.set(tileID, data);\n    \n}\n\n\n//send join push\n\ncomm = \"TileUpdate\"+\"=:=\"+ tileType +\"=:=\"+ tileID +\"=:=\"+ title +\"=:=\"+ subtitle +\"=:=\"+ icon +\"=:=\"+ command+\"=:=\"+toggleState +\"=:=\"+ rangeMin+ \"=:=\"+ rangeMax +\"=:=\"+ rangeCurrent +\"=:=\"+rangeStep+\"=:=\"+ rangeFormat;\n\nmsg.push = {\"devices\" : sourceID, \"text\": comm};\nreturn msg;\n\n","outputs":1,"noerr":0,"initialize":"///Visit https://joinjoaomgcd.appspot.com/ to get your Join API ID\n\n","finalize":"","libs":[],"x":1160,"y":640,"wires":[["fc15b306.4d398"]]},{"id":"127da3c8.5203ac","type":"function","z":"48497fa5.7b69d","name":"Settings","func":"// see on start tab\nreturn msg;","outputs":1,"noerr":0,"initialize":"// Code added here will be run once\n// whenever the node is started.\n\n//before you start, please make sure that your internet adapter has the WOL \n//capability built in and the power management of the adapter is set to\n// allow the device to wake up computer and do so using Magic Packet only\n// if you forget to select these, your computer won't wake up, or wont \n//stay asleep (Magic Packet only)\n\nvar WOL_tile = {\"tiletype\": \"button\",  //button|range|rangeToggle|toggle\n                \"tileID\": \"wol\",        //id of the tile (must be unique)\n                \"sourceID\": \"Mi 11\"};  //names of Join devices to synct tiles\nflow.set(\"WOL\", WOL_tile); \n \n\n//WOL target\nvar target = {\"mac\": \"xx:xx:xx:xx:xx:xx\",   // MAC address of your machine\n              \"host\": \"0.0.0.0\",  // IP address of your machine\n              \"state\": false, \n              \"joinName\": \"Laptop\"};  //name of the Join device - target to put to sleep\nflow.set(\"target\", target);","finalize":"","libs":[],"x":140,"y":80,"wires":[[]]},{"id":"59ef2313.4fd9fc","type":"wake on lan","z":"48497fa5.7b69d","g":"2748f3ea.5d34bc","mac":"","host":"","udpport":9,"name":"","x":870,"y":460,"wires":[]},{"id":"5cc07e2f.a3521","type":"function","z":"48497fa5.7b69d","g":"2748f3ea.5d34bc","name":"Target","func":"var target = flow.get(\"target\");\n\n\n// ping updates\nif(msg.topic === \"trigger\") {\n    msg.payload = target.host;\n    return [null, msg, null];\n}\n\n\n//smart home integration\nif(msg.topic === \"smarthome\"){\n    if(target.state === false){\n        msg.mac = target.mac;\n        var msg2 = {payload: target.host};\n        return [msg, msg2, null];\n    }\n    if(target.state === true){\n        msg.payload = null,\n        msg.push = {\"devices\" : target.joinName, \"text\": \"WakeUp\"};\n        return [null, null, msg];\n    }\n}\n\n\n//UI interaction\nif(msg.topic === \"UI\"){\n    if(target.state === false){\n        msg.mac = target.mac;\n        var msg2 = {payload: target.host};\n        return [msg, msg2, null];\n    }\n    if(target.state === true){\n        msg.payload = null,\n        msg.push = {\"devices\" : target.joinName, \"text\": \"WakeUp\"};\n        return [null, null, msg];\n    }\n}\n\n\n//sent Power Menu message\nelse{\n    if(target.state === false){\n        msg.mac = target.mac;\n        var msg2 = {payload: target.host};\n        return [msg, msg2, null];\n    }\n    // sends to sleep - requires EventGhost\n    if(target.state === true){\n        msg.payload = null,\n        msg.push = {\"devices\" : target.joinName, \"text\": \"WakeUp\"};\n        return [null, null, msg];\n        \n    }\n    \n    \n    \n}","outputs":3,"noerr":0,"initialize":"","finalize":"","libs":[],"x":650,"y":480,"wires":[["59ef2313.4fd9fc"],["303c9900.6d2bc8"],["9d16f122.bcc8a"]]},{"id":"8008d0bc.12f22","type":"ping","z":"48497fa5.7b69d","g":"2748f3ea.5d34bc","protocol":"Automatic","mode":"triggered","name":"","host":"","timer":"30","inputs":1,"x":1010,"y":480,"wires":[["d4bed9b6.227458"]]},{"id":"d4bed9b6.227458","type":"function","z":"48497fa5.7b69d","g":"2748f3ea.5d34bc","name":"Format","func":"var response = msg.payload;\nvar target = flow.get(\"target\");\nvar state;\n\nif(response === false){msg.payload = response; state = response;}\nelse{msg.payload = true, state = true;}\n\ntarget.state = state;\nflow.set(\"target\", target);\n\nreturn msg;","outputs":1,"noerr":0,"initialize":"","finalize":"","libs":[],"x":1140,"y":480,"wires":[["92c078e5.3a7da8"]]},{"id":"303c9900.6d2bc8","type":"delay","z":"48497fa5.7b69d","g":"2748f3ea.5d34bc","name":"","pauseType":"delay","timeout":"10","timeoutUnits":"seconds","rate":"1","nbRateUnits":"1","rateUnits":"second","randomFirst":"1","randomLast":"5","randomUnits":"seconds","drop":false,"x":860,"y":500,"wires":[["8008d0bc.12f22"]]},{"id":"75457c4b.106ef4","type":"inject","z":"48497fa5.7b69d","name":"every 1 min","props":[{"p":"payload"},{"p":"topic","vt":"str"}],"repeat":"30","crontab":"","once":false,"onceDelay":0.1,"topic":"trigger","payload":"","payloadType":"date","x":170,"y":200,"wires":[["5751726b.046fdc"]]},{"id":"a7c6154a.c648d8","type":"link in","z":"48497fa5.7b69d","g":"e41a634a.4bf0e","name":"","links":["a681dcee.0a424"],"x":495,"y":640,"wires":[["3d1589e6.83e9d6"]]},{"id":"a681dcee.0a424","type":"link out","z":"48497fa5.7b69d","name":"","links":["a7c6154a.c648d8"],"x":375,"y":140,"wires":[]},{"id":"fc15b306.4d398","type":"link out","z":"48497fa5.7b69d","g":"e41a634a.4bf0e","name":"","links":["258654f4.d2ebdc"],"x":1295,"y":640,"wires":[]},{"id":"258654f4.d2ebdc","type":"link in","z":"48497fa5.7b69d","name":"","links":["fc15b306.4d398","9d16f122.bcc8a"],"x":1395,"y":140,"wires":[["a56b6e3e.409b"]]},{"id":"9d16f122.bcc8a","type":"link out","z":"48497fa5.7b69d","g":"2748f3ea.5d34bc","name":"","links":["258654f4.d2ebdc"],"x":815,"y":540,"wires":[]},{"id":"134f1e46.cc9752","type":"alexa-home","z":"48497fa5.7b69d","g":"32922e65.53a7c2","conf":"f73b500.83c5db","device":"143923","acknoledge":true,"name":"Computer","topic":"","x":920,"y":140,"wires":[["75dbe06c.2bedc"]]},{"id":"c4ccbf98.36334","type":"noraf-outlet","z":"48497fa5.7b69d","g":"32922e65.53a7c2","devicename":"Computer","roomhint":"Office","name":"","passthru":false,"nora":"17b5d928.6d60e7","topic":"","onvalue":"true","onvalueType":"bool","offvalue":"false","offvalueType":"bool","twofactor":"off","twofactorpin":"","x":920,"y":200,"wires":[["75dbe06c.2bedc"]]},{"id":"75dbe06c.2bedc","type":"link out","z":"48497fa5.7b69d","g":"32922e65.53a7c2","name":"","links":["510ca2d7.76a10c"],"x":1295,"y":180,"wires":[]},{"id":"ad0e5fae.0572a","type":"link in","z":"48497fa5.7b69d","g":"32922e65.53a7c2","name":"","links":["92c078e5.3a7da8"],"x":495,"y":200,"wires":[["c4ccbf98.36334"]]},{"id":"510ca2d7.76a10c","type":"link in","z":"48497fa5.7b69d","g":"2748f3ea.5d34bc","name":"","links":["75dbe06c.2bedc","5751726b.046fdc","3255e081.91ac1","e931a643.bb8278"],"x":495,"y":480,"wires":[["5cc07e2f.a3521"]]},{"id":"92c078e5.3a7da8","type":"link out","z":"48497fa5.7b69d","g":"2748f3ea.5d34bc","name":"","links":["ad0e5fae.0572a","be9ba2be.22e42","aa175544.8c87c8"],"x":1295,"y":480,"wires":[]},{"id":"fc0c1554.7b66b8","type":"ui_button","z":"48497fa5.7b69d","g":"7e0357c2.b386f8","name":"","group":"3461b534.d9379a","order":0,"width":0,"height":0,"passthru":false,"label":"{{msg.label}}","tooltip":"","color":"","bgcolor":"{{msg.colour}}","icon":"fa-desktop","payload":"toggle","payloadType":"str","topic":"UI","topicType":"str","x":910,"y":340,"wires":[["7f6b0e6e.13fd9"]]},{"id":"21f3c4c3.f8a20c","type":"ui_text","z":"48497fa5.7b69d","g":"7e0357c2.b386f8","group":"3461b534.d9379a","order":1,"width":0,"height":0,"name":"Computer state","label":"Status","format":"{{msg.label}}","layout":"row-spread","x":940,"y":300,"wires":[]},{"id":"9dbd9977.e4e958","type":"function","z":"48497fa5.7b69d","g":"7e0357c2.b386f8","name":"format UI","func":"if(msg.payload === true){\n    msg.label = \"online\";\n    msg.colour = \"green\";\n}\nelse{\n    msg.label = \"offline\";\n    msg.colour = \"red\";\n    \n}\n\n\nreturn msg;","outputs":1,"noerr":0,"initialize":"","finalize":"","libs":[],"x":730,"y":300,"wires":[["fc0c1554.7b66b8","21f3c4c3.f8a20c"]]},{"id":"be9ba2be.22e42","type":"link in","z":"48497fa5.7b69d","g":"7e0357c2.b386f8","name":"","links":["92c078e5.3a7da8"],"x":495,"y":300,"wires":[["9dbd9977.e4e958"]]},{"id":"3523f564.f0688a","type":"ui_toast","z":"48497fa5.7b69d","g":"7e0357c2.b386f8","position":"top right","displayTime":"3","highlight":"","sendall":true,"outputs":0,"ok":"OK","cancel":"","raw":false,"topic":"","name":"","x":1210,"y":300,"wires":[]},{"id":"7f6b0e6e.13fd9","type":"function","z":"48497fa5.7b69d","g":"7e0357c2.b386f8","name":"","func":"var target = flow.get(\"target\");\n\nif(target.state === true){\n    var msg1 ={ payload:  \"Sleep command sent\"};\n    msg.payload = false;\n}\nif(target.state === false){\n    var msg1 ={ payload: \"Wake up command sent\"};\n    msg.payload = true;\n    \n}\nreturn [msg1, msg];","outputs":2,"noerr":0,"initialize":"","finalize":"","libs":[],"x":1040,"y":340,"wires":[["3523f564.f0688a"],["3255e081.91ac1"]]},{"id":"3255e081.91ac1","type":"link out","z":"48497fa5.7b69d","g":"7e0357c2.b386f8","name":"","links":["510ca2d7.76a10c"],"x":1295,"y":360,"wires":[]},{"id":"5751726b.046fdc","type":"link out","z":"48497fa5.7b69d","name":"","links":["510ca2d7.76a10c"],"x":375,"y":200,"wires":[]},{"id":"aa175544.8c87c8","type":"link in","z":"48497fa5.7b69d","g":"e41a634a.4bf0e","name":"","links":["e931a643.bb8278","92c078e5.3a7da8"],"x":1015,"y":640,"wires":[["2ee13f93.83111"]]},{"id":"e931a643.bb8278","type":"link out","z":"48497fa5.7b69d","g":"e41a634a.4bf0e","name":"","links":["aa175544.8c87c8","510ca2d7.76a10c"],"x":895,"y":640,"wires":[]},{"id":"bb9737a3.bbb4d8","type":"join-server","name":"NodeRED","port":"1820","joinConfig":"1c0401ee.9b9bfe"},{"id":"1c0401ee.9b9bfe","type":"join-config","name":"Join Config","register":true},{"id":"f73b500.83c5db","type":"alexa-home-conf","username":"quintaar"},{"id":"17b5d928.6d60e7","type":"noraf-config","name":"Nora","group":"","twofactor":"off","twofactorpin":"","localexecution":true,"structure":"Home"},{"id":"3461b534.d9379a","type":"ui_group","name":"Computer WOL","tab":"3ded0fbc.7411a","order":1,"disp":true,"width":"6","collapse":false},{"id":"3ded0fbc.7411a","type":"ui_tab","name":"Computer","icon":"dashboard","disabled":false,"hidden":false}]